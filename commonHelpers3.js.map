{"version":3,"file":"commonHelpers3.js","sources":["../src/js/03-feedback.js"],"sourcesContent":["import throttle from 'lodash.throttle';\n\nconst form = document.querySelector('.feedback-form');\nconst LS_KEY = 'feedback-form-state';\n\n/**\n *Saving data to Local Storage\n * @param {*} key\n * @param {*} value\n */\nconst save = function (key, value) {\n  try {\n    const strigifiedData = JSON.stringify(value);\n    localStorage.setItem(key, strigifiedData);\n  } catch (error) {\n    console.log('Set state error: ', error.message);\n  }\n};\n\n/**\n * Loading data from Local Storage\n * @param {*} key\n * @returns\n */\nconst load = function (key) {\n  try {\n    const strigifiedData = localStorage.getItem(key);\n    return strigifiedData === null ? undefined : JSON.parse(strigifiedData);\n  } catch (error) {\n    console.log('Get state error: ', error.message);\n  }\n};\n\n/**\n * Removing data from Local Storage\n * @param {*} key\n */\nconst remove = function (key) {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Get state error: ', error.message);\n  }\n};\n\n/**\n * Operations with Input data\n * @param {*} evt\n */\nconst onFormInput = function (evt) {\n  const { name, value } = evt.target;\n  try {\n    let saveData = load(LS_KEY);\n    saveData = saveData ? saveData : {};\n    saveData[name] = value;\n    save(LS_KEY, saveData);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst throttledOnFormInput = throttle(onFormInput, 500);\nform.addEventListener('input', throttledOnFormInput);\n\n/**\n *Loading form data from Local Storage and fill them into the form\n * @returns\n */\nfunction initPage() {\n  const saveData = load(LS_KEY);\n  if (!saveData) {\n    return;\n  }\n  Object.entries(saveData).forEach(([name, value]) => {\n    form.elements[name].value = value;\n  });\n}\ninitPage();\n/**\n * Retrieve and delete data from form fields, output to console, reset form,\n * @param {*} evt\n */\nconst handleSubmit = function (evt) {\n  evt.preventDefault();\n\n  const {\n    elements: { email, message },\n  } = evt.currentTarget;\n\n  console.log({ email: email.value, message: message.value });\n  evt.currentTarget.reset();\n  remove(LS_KEY);\n};\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["form","LS_KEY","save","key","value","strigifiedData","error","load","remove","onFormInput","evt","name","saveData","throttledOnFormInput","throttle","initPage","handleSubmit","email","message"],"mappings":"wIAEA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAS,sBAOTC,EAAO,SAAUC,EAAKC,EAAO,CACjC,GAAI,CACF,MAAMC,EAAiB,KAAK,UAAUD,CAAK,EAC3C,aAAa,QAAQD,EAAKE,CAAc,CACzC,OAAQC,EAAP,CACA,QAAQ,IAAI,oBAAqBA,EAAM,OAAO,CAC/C,CACH,EAOMC,EAAO,SAAUJ,EAAK,CAC1B,GAAI,CACF,MAAME,EAAiB,aAAa,QAAQF,CAAG,EAC/C,OAAOE,IAAmB,KAAO,OAAY,KAAK,MAAMA,CAAc,CACvE,OAAQC,EAAP,CACA,QAAQ,IAAI,oBAAqBA,EAAM,OAAO,CAC/C,CACH,EAMME,EAAS,SAAUL,EAAK,CAC5B,GAAI,CACF,aAAa,WAAWA,CAAG,CAC5B,OAAQG,EAAP,CACA,QAAQ,IAAI,oBAAqBA,EAAM,OAAO,CAC/C,CACH,EAMMG,EAAc,SAAUC,EAAK,CACjC,KAAM,CAAE,KAAAC,EAAM,MAAAP,GAAUM,EAAI,OAC5B,GAAI,CACF,IAAIE,EAAWL,EAAKN,CAAM,EAC1BW,EAAWA,GAAsB,GACjCA,EAASD,GAAQP,EACjBF,EAAKD,EAAQW,CAAQ,CACtB,OAAQN,EAAP,CACA,QAAQ,IAAIA,CAAK,CAClB,CACH,EAEMO,EAAuBC,EAASL,EAAa,GAAG,EACtDT,EAAK,iBAAiB,QAASa,CAAoB,EAMnD,SAASE,GAAW,CAClB,MAAMH,EAAWL,EAAKN,CAAM,EACvBW,GAGL,OAAO,QAAQA,CAAQ,EAAE,QAAQ,CAAC,CAACD,EAAMP,CAAK,IAAM,CAClDJ,EAAK,SAASW,GAAM,MAAQP,CAChC,CAAG,CACH,CACAW,IAKA,MAAMC,EAAe,SAAUN,EAAK,CAClCA,EAAI,eAAc,EAElB,KAAM,CACJ,SAAU,CAAE,MAAAO,EAAO,QAAAC,CAAS,CAChC,EAAMR,EAAI,cAER,QAAQ,IAAI,CAAE,MAAOO,EAAM,MAAO,QAASC,EAAQ,KAAK,CAAE,EAC1DR,EAAI,cAAc,QAClBF,EAAOP,CAAM,CACf,EAEAD,EAAK,iBAAiB,SAAUgB,CAAY"}